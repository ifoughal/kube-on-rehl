replicaCount: 1

## @section Application configuration
## @param existingConfigMap [string] Name of the existing ConfigMap with kafbat-ui environment variables
existingConfigMap: ""
## @param yamlApplicationConfig Kafbat-UI config in Yaml format
yamlApplicationConfig:
  kafka:
    clusters:
    - name: kafka-cluster
      bootstrapServers: broker-0-kafka-cluster.pfs.pack:9093
      properties:
        security.protocol: SSL
        ssl.truststore.type: JKS
        ssl.truststore.location: /truststore/truststore.jks
        ssl.truststore.password: atreides
        ssl.keystore.type: PKCS12
        ssl.keystore.location: /keystore/keystore.p12
        ssl.keystore.password: arakeen
        ssl.protocol: TLSv1.3
## @param yamlApplicationConfigConfigMap Map with name and keyName keys, name refers to the existing ConfigMap, keyName refers to the ConfigMap key with Kafbat-UI config in Yaml format
yamlApplicationConfigConfigMap:
  {}
  # keyName: config.yml
  # name: configMapName
## @param yamlApplicationConfigSecret Secret with name and keyName keys, name refers to the existing ConfigMap, keyName refers to the ConfigMap key with Kafbat-UI config in Yaml format
yamlApplicationConfigSecret:
  {}
  # keyName: config.yml
  # name: secretName
## @param existingSecret Name of the existing Secret with Kafbat-UI environment variables
# existingSecret: ""
### @section Environment variables from
envs:
  ## @param envs.secret Set of the sensitive environment variables to pass to Kafbat-UI
  secret: {}
  ## @param envs.config Set of the environment variables to pass to Kafbat-UI
  config: {}
  ## @param envs.secretMappings The mapping of existing secret to env variable.
  secretMappings: {}
    #ENV_NAME:
    #  name: kubernetes-secret-name
    #  keyName: kubernetes-secret-key
  ## @param envs.configMappings  The mapping of configmap and keyName to get env variable.
  configMappings: {}
    #ENV_NAME:
    #  name: kubernetes-configmap-name
    #  keyName: kubernetes-configmap-key
## @param env [object] Envs to be added to the Kafka-UI container
env:
# - name: KAFKA_HEAP_OPTS
#   value: "-Xms1G -Xmx4G"

- name: JAVA_TOOL_OPTIONS
  value: >
    -Xms1G -Xmx4G
    -Djavax.net.debug=ssl,handshake,trustmanager

volumeMounts:
- name: kafka-ui-truststore
  mountPath: /truststore
  readOnly: true
- name: kafka-ui-keystore
  mountPath: /keystore
  readOnly: true
volumes:
- name: kafka-ui-truststore
  secret:
    secretName: kafka-ui-truststore
- name: kafka-ui-keystore
  secret:
    secretName: kafka-ui-keystore

## @param resources Set Kafka-UI container requests and limits for different resources like CPU or memory (essential for production workloads)
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 200m
    memory: 256Mi

## @param hostAliases [object] Kafka-UI pods host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: {}

## @section Network Policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  enabled: false
  ## @skip networkPolicy.egressRules
  egressRules:
    ## Additional custom egress rules
    ## e.g:
    ## customRules:
    ##   - to:
    ##       - namespaceSelector:
    ##           matchLabels:
    ##             label: example
    customRules: []
  ## @skip networkPolicy.ingressRules
  ingressRules:
    ## Additional custom ingress rules
    ## e.g:
    ## customRules:
    ##   - from:
    ##       - namespaceSelector:
    ##           matchLabels:
    ##             label: example
    customRules: []

## @param podAnnotations Annotations for Kafka-UI pods
podAnnotations:
  rollme: "{{ now | unixEpoch }}"


## @param podLabels Extra labels for Kafka-UI pods
podLabels: {}

## @param annotations [object] Annotations to be added to kafka-ui Deployment
annotations:
  rollme: "{{ now | unixEpoch }}"


## @param labels [object] Labels to be added to kafka-ui Deployment
labels:
  app: kafka-ui

## @param probes.useHttpsScheme Set field schema as HTTPS for readines and liveness probe
##
probes:
  useHttpsScheme: false

## @section Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext [object] The security settings that you specify for a Pod apply to all Containers in the Pod
podSecurityContext:
  {}
  # fsGroup: 2000
## @param securityContext [object] The security settings that you specify for a Kafka-UI container
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## @section Traffic Exposure Parameters
## Kafka-UI service parameters
##
service:
  ##  @param service.labels [object] Labels for the Service
  labels:
    app: kafka-ui
  ## @param service.type Kafka-UI service type
  type: ClusterIP
  ## @param service.port Kafka-UI pod port number
  port: 80
  # In case of service type LoadBalancer, you can specify reserved static IP
  # loadBalancerIP: 10.11.12.13
  # if you want to force a specific nodePort. Must be use with service.type=NodePort
  # nodePort:


## Autoscaling configuration
## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
## @skip autoscaling
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

## @param nodeSelector Node labels for Kafka-UI pods assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}

## @param tolerations Tolerations for Kafka-UI pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param affinity Affinity for Kafka-UI pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
##
affinity: {}

## @param revisionHistoryLimit [nullable] Specify how many old ReplicaSets for this Deployment you want to retain
revisionHistoryLimit: null

